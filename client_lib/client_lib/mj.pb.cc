// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mj.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mj.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace qp_mj {

namespace {

const ::google::protobuf::Descriptor* qp_logic_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  qp_logic_reflection_ = NULL;
const ::google::protobuf::Descriptor* qp_mj_game_start_notify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  qp_mj_game_start_notify_reflection_ = NULL;
const ::google::protobuf::Descriptor* qp_mj_game_end_notify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  qp_mj_game_end_notify_reflection_ = NULL;
const ::google::protobuf::Descriptor* qp_mj_oper_req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  qp_mj_oper_req_reflection_ = NULL;
const ::google::protobuf::Descriptor* qp_mj_oper_notify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  qp_mj_oper_notify_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ws_cmd_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_mj_2eproto() {
  protobuf_AddDesc_mj_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mj.proto");
  GOOGLE_CHECK(file != NULL);
  qp_logic_descriptor_ = file->message_type(0);
  static const int qp_logic_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_logic, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_logic, serialized_),
  };
  qp_logic_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      qp_logic_descriptor_,
      qp_logic::default_instance_,
      qp_logic_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_logic, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_logic, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(qp_logic));
  qp_mj_game_start_notify_descriptor_ = file->message_type(1);
  static const int qp_mj_game_start_notify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_mj_game_start_notify, pai_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_mj_game_start_notify, banker_seat_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_mj_game_start_notify, oper_flag_),
  };
  qp_mj_game_start_notify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      qp_mj_game_start_notify_descriptor_,
      qp_mj_game_start_notify::default_instance_,
      qp_mj_game_start_notify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_mj_game_start_notify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_mj_game_start_notify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(qp_mj_game_start_notify));
  qp_mj_game_end_notify_descriptor_ = file->message_type(2);
  static const int qp_mj_game_end_notify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_mj_game_end_notify, a_),
  };
  qp_mj_game_end_notify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      qp_mj_game_end_notify_descriptor_,
      qp_mj_game_end_notify::default_instance_,
      qp_mj_game_end_notify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_mj_game_end_notify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_mj_game_end_notify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(qp_mj_game_end_notify));
  qp_mj_oper_req_descriptor_ = file->message_type(3);
  static const int qp_mj_oper_req_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_mj_oper_req, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_mj_oper_req, v1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_mj_oper_req, v2_),
  };
  qp_mj_oper_req_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      qp_mj_oper_req_descriptor_,
      qp_mj_oper_req::default_instance_,
      qp_mj_oper_req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_mj_oper_req, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_mj_oper_req, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(qp_mj_oper_req));
  qp_mj_oper_notify_descriptor_ = file->message_type(4);
  static const int qp_mj_oper_notify_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_mj_oper_notify, seat_numer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_mj_oper_notify, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_mj_oper_notify, v1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_mj_oper_notify, v2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_mj_oper_notify, next_oper_seat_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_mj_oper_notify, next_oper_flag_),
  };
  qp_mj_oper_notify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      qp_mj_oper_notify_descriptor_,
      qp_mj_oper_notify::default_instance_,
      qp_mj_oper_notify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_mj_oper_notify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(qp_mj_oper_notify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(qp_mj_oper_notify));
  ws_cmd_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mj_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    qp_logic_descriptor_, &qp_logic::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    qp_mj_game_start_notify_descriptor_, &qp_mj_game_start_notify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    qp_mj_game_end_notify_descriptor_, &qp_mj_game_end_notify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    qp_mj_oper_req_descriptor_, &qp_mj_oper_req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    qp_mj_oper_notify_descriptor_, &qp_mj_oper_notify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mj_2eproto() {
  delete qp_logic::default_instance_;
  delete qp_logic_reflection_;
  delete qp_mj_game_start_notify::default_instance_;
  delete qp_mj_game_start_notify_reflection_;
  delete qp_mj_game_end_notify::default_instance_;
  delete qp_mj_game_end_notify_reflection_;
  delete qp_mj_oper_req::default_instance_;
  delete qp_mj_oper_req_reflection_;
  delete qp_mj_oper_notify::default_instance_;
  delete qp_mj_oper_notify_reflection_;
}

void protobuf_AddDesc_mj_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\010mj.proto\022\005qp_mj\"+\n\010qp_logic\022\013\n\003cmd\030\001 \002"
    "(\005\022\022\n\nserialized\030\003 \001(\014\"U\n\027qp_mj_game_sta"
    "rt_notify\022\013\n\003pai\030\001 \003(\r\022\032\n\022banker_seat_nu"
    "mber\030\002 \002(\005\022\021\n\toper_flag\030\003 \001(\r\"\"\n\025qp_mj_g"
    "ame_end_notify\022\t\n\001a\030\001 \002(\r\"6\n\016qp_mj_oper_"
    "req\022\014\n\004type\030\001 \002(\r\022\n\n\002v1\030\002 \001(\r\022\n\n\002v2\030\003 \001("
    "\r\"\201\001\n\021qp_mj_oper_notify\022\022\n\nseat_numer\030\001 "
    "\002(\005\022\014\n\004type\030\002 \002(\r\022\n\n\002v1\030\003 \001(\r\022\n\n\002v2\030\004 \001("
    "\r\022\032\n\022next_oper_seat_num\030\005 \001(\005\022\026\n\016next_op"
    "er_flag\030\006 \001(\r*s\n\006ws_cmd\022\035\n\030CMD_MJ_GAME_S"
    "TART_NOTIFY\020\351\007\022\033\n\026CMD_MJ_GAME_END_NOTIFY"
    "\020\352\007\022\024\n\017CMD_MJ_OPER_REQ\020\353\007\022\027\n\022CMD_MJ_OPER"
    "_NOTIFY\020\354\007", 490);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mj.proto", &protobuf_RegisterTypes);
  qp_logic::default_instance_ = new qp_logic();
  qp_mj_game_start_notify::default_instance_ = new qp_mj_game_start_notify();
  qp_mj_game_end_notify::default_instance_ = new qp_mj_game_end_notify();
  qp_mj_oper_req::default_instance_ = new qp_mj_oper_req();
  qp_mj_oper_notify::default_instance_ = new qp_mj_oper_notify();
  qp_logic::default_instance_->InitAsDefaultInstance();
  qp_mj_game_start_notify::default_instance_->InitAsDefaultInstance();
  qp_mj_game_end_notify::default_instance_->InitAsDefaultInstance();
  qp_mj_oper_req::default_instance_->InitAsDefaultInstance();
  qp_mj_oper_notify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mj_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mj_2eproto {
  StaticDescriptorInitializer_mj_2eproto() {
    protobuf_AddDesc_mj_2eproto();
  }
} static_descriptor_initializer_mj_2eproto_;
const ::google::protobuf::EnumDescriptor* ws_cmd_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ws_cmd_descriptor_;
}
bool ws_cmd_IsValid(int value) {
  switch(value) {
    case 1001:
    case 1002:
    case 1003:
    case 1004:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int qp_logic::kCmdFieldNumber;
const int qp_logic::kSerializedFieldNumber;
#endif  // !_MSC_VER

qp_logic::qp_logic()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void qp_logic::InitAsDefaultInstance() {
}

qp_logic::qp_logic(const qp_logic& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void qp_logic::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 0;
  serialized_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

qp_logic::~qp_logic() {
  SharedDtor();
}

void qp_logic::SharedDtor() {
  if (serialized_ != &::google::protobuf::internal::kEmptyString) {
    delete serialized_;
  }
  if (this != default_instance_) {
  }
}

void qp_logic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* qp_logic::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return qp_logic_descriptor_;
}

const qp_logic& qp_logic::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mj_2eproto();
  return *default_instance_;
}

qp_logic* qp_logic::default_instance_ = NULL;

qp_logic* qp_logic::New() const {
  return new qp_logic;
}

void qp_logic::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cmd_ = 0;
    if (has_serialized()) {
      if (serialized_ != &::google::protobuf::internal::kEmptyString) {
        serialized_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool qp_logic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 cmd = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cmd_)));
          set_has_cmd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_serialized;
        break;
      }

      // optional bytes serialized = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_serialized:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_serialized()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void qp_logic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 cmd = 1;
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cmd(), output);
  }

  // optional bytes serialized = 3;
  if (has_serialized()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->serialized(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* qp_logic::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 cmd = 1;
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cmd(), target);
  }

  // optional bytes serialized = 3;
  if (has_serialized()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->serialized(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int qp_logic::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 cmd = 1;
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cmd());
    }

    // optional bytes serialized = 3;
    if (has_serialized()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->serialized());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void qp_logic::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const qp_logic* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const qp_logic*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void qp_logic::MergeFrom(const qp_logic& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_serialized()) {
      set_serialized(from.serialized());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void qp_logic::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void qp_logic::CopyFrom(const qp_logic& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool qp_logic::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void qp_logic::Swap(qp_logic* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(serialized_, other->serialized_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata qp_logic::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = qp_logic_descriptor_;
  metadata.reflection = qp_logic_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int qp_mj_game_start_notify::kPaiFieldNumber;
const int qp_mj_game_start_notify::kBankerSeatNumberFieldNumber;
const int qp_mj_game_start_notify::kOperFlagFieldNumber;
#endif  // !_MSC_VER

qp_mj_game_start_notify::qp_mj_game_start_notify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void qp_mj_game_start_notify::InitAsDefaultInstance() {
}

qp_mj_game_start_notify::qp_mj_game_start_notify(const qp_mj_game_start_notify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void qp_mj_game_start_notify::SharedCtor() {
  _cached_size_ = 0;
  banker_seat_number_ = 0;
  oper_flag_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

qp_mj_game_start_notify::~qp_mj_game_start_notify() {
  SharedDtor();
}

void qp_mj_game_start_notify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void qp_mj_game_start_notify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* qp_mj_game_start_notify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return qp_mj_game_start_notify_descriptor_;
}

const qp_mj_game_start_notify& qp_mj_game_start_notify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mj_2eproto();
  return *default_instance_;
}

qp_mj_game_start_notify* qp_mj_game_start_notify::default_instance_ = NULL;

qp_mj_game_start_notify* qp_mj_game_start_notify::New() const {
  return new qp_mj_game_start_notify;
}

void qp_mj_game_start_notify::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    banker_seat_number_ = 0;
    oper_flag_ = 0u;
  }
  pai_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool qp_mj_game_start_notify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 pai = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pai:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_pai())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_pai())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_pai;
        if (input->ExpectTag(16)) goto parse_banker_seat_number;
        break;
      }

      // required int32 banker_seat_number = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_banker_seat_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &banker_seat_number_)));
          set_has_banker_seat_number();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_oper_flag;
        break;
      }

      // optional uint32 oper_flag = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_oper_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &oper_flag_)));
          set_has_oper_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void qp_mj_game_start_notify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint32 pai = 1;
  for (int i = 0; i < this->pai_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->pai(i), output);
  }

  // required int32 banker_seat_number = 2;
  if (has_banker_seat_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->banker_seat_number(), output);
  }

  // optional uint32 oper_flag = 3;
  if (has_oper_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->oper_flag(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* qp_mj_game_start_notify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint32 pai = 1;
  for (int i = 0; i < this->pai_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->pai(i), target);
  }

  // required int32 banker_seat_number = 2;
  if (has_banker_seat_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->banker_seat_number(), target);
  }

  // optional uint32 oper_flag = 3;
  if (has_oper_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->oper_flag(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int qp_mj_game_start_notify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required int32 banker_seat_number = 2;
    if (has_banker_seat_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->banker_seat_number());
    }

    // optional uint32 oper_flag = 3;
    if (has_oper_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oper_flag());
    }

  }
  // repeated uint32 pai = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->pai_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->pai(i));
    }
    total_size += 1 * this->pai_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void qp_mj_game_start_notify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const qp_mj_game_start_notify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const qp_mj_game_start_notify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void qp_mj_game_start_notify::MergeFrom(const qp_mj_game_start_notify& from) {
  GOOGLE_CHECK_NE(&from, this);
  pai_.MergeFrom(from.pai_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_banker_seat_number()) {
      set_banker_seat_number(from.banker_seat_number());
    }
    if (from.has_oper_flag()) {
      set_oper_flag(from.oper_flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void qp_mj_game_start_notify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void qp_mj_game_start_notify::CopyFrom(const qp_mj_game_start_notify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool qp_mj_game_start_notify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  return true;
}

void qp_mj_game_start_notify::Swap(qp_mj_game_start_notify* other) {
  if (other != this) {
    pai_.Swap(&other->pai_);
    std::swap(banker_seat_number_, other->banker_seat_number_);
    std::swap(oper_flag_, other->oper_flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata qp_mj_game_start_notify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = qp_mj_game_start_notify_descriptor_;
  metadata.reflection = qp_mj_game_start_notify_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int qp_mj_game_end_notify::kAFieldNumber;
#endif  // !_MSC_VER

qp_mj_game_end_notify::qp_mj_game_end_notify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void qp_mj_game_end_notify::InitAsDefaultInstance() {
}

qp_mj_game_end_notify::qp_mj_game_end_notify(const qp_mj_game_end_notify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void qp_mj_game_end_notify::SharedCtor() {
  _cached_size_ = 0;
  a_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

qp_mj_game_end_notify::~qp_mj_game_end_notify() {
  SharedDtor();
}

void qp_mj_game_end_notify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void qp_mj_game_end_notify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* qp_mj_game_end_notify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return qp_mj_game_end_notify_descriptor_;
}

const qp_mj_game_end_notify& qp_mj_game_end_notify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mj_2eproto();
  return *default_instance_;
}

qp_mj_game_end_notify* qp_mj_game_end_notify::default_instance_ = NULL;

qp_mj_game_end_notify* qp_mj_game_end_notify::New() const {
  return new qp_mj_game_end_notify;
}

void qp_mj_game_end_notify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    a_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool qp_mj_game_end_notify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 a = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &a_)));
          set_has_a();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void qp_mj_game_end_notify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 a = 1;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->a(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* qp_mj_game_end_notify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 a = 1;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->a(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int qp_mj_game_end_notify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 a = 1;
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->a());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void qp_mj_game_end_notify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const qp_mj_game_end_notify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const qp_mj_game_end_notify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void qp_mj_game_end_notify::MergeFrom(const qp_mj_game_end_notify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_a()) {
      set_a(from.a());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void qp_mj_game_end_notify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void qp_mj_game_end_notify::CopyFrom(const qp_mj_game_end_notify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool qp_mj_game_end_notify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void qp_mj_game_end_notify::Swap(qp_mj_game_end_notify* other) {
  if (other != this) {
    std::swap(a_, other->a_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata qp_mj_game_end_notify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = qp_mj_game_end_notify_descriptor_;
  metadata.reflection = qp_mj_game_end_notify_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int qp_mj_oper_req::kTypeFieldNumber;
const int qp_mj_oper_req::kV1FieldNumber;
const int qp_mj_oper_req::kV2FieldNumber;
#endif  // !_MSC_VER

qp_mj_oper_req::qp_mj_oper_req()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void qp_mj_oper_req::InitAsDefaultInstance() {
}

qp_mj_oper_req::qp_mj_oper_req(const qp_mj_oper_req& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void qp_mj_oper_req::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
  v1_ = 0u;
  v2_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

qp_mj_oper_req::~qp_mj_oper_req() {
  SharedDtor();
}

void qp_mj_oper_req::SharedDtor() {
  if (this != default_instance_) {
  }
}

void qp_mj_oper_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* qp_mj_oper_req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return qp_mj_oper_req_descriptor_;
}

const qp_mj_oper_req& qp_mj_oper_req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mj_2eproto();
  return *default_instance_;
}

qp_mj_oper_req* qp_mj_oper_req::default_instance_ = NULL;

qp_mj_oper_req* qp_mj_oper_req::New() const {
  return new qp_mj_oper_req;
}

void qp_mj_oper_req::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0u;
    v1_ = 0u;
    v2_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool qp_mj_oper_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_v1;
        break;
      }

      // optional uint32 v1 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_v1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &v1_)));
          set_has_v1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_v2;
        break;
      }

      // optional uint32 v2 = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_v2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &v2_)));
          set_has_v2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void qp_mj_oper_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional uint32 v1 = 2;
  if (has_v1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->v1(), output);
  }

  // optional uint32 v2 = 3;
  if (has_v2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->v2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* qp_mj_oper_req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // optional uint32 v1 = 2;
  if (has_v1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->v1(), target);
  }

  // optional uint32 v2 = 3;
  if (has_v2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->v2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int qp_mj_oper_req::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional uint32 v1 = 2;
    if (has_v1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->v1());
    }

    // optional uint32 v2 = 3;
    if (has_v2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->v2());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void qp_mj_oper_req::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const qp_mj_oper_req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const qp_mj_oper_req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void qp_mj_oper_req::MergeFrom(const qp_mj_oper_req& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_v1()) {
      set_v1(from.v1());
    }
    if (from.has_v2()) {
      set_v2(from.v2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void qp_mj_oper_req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void qp_mj_oper_req::CopyFrom(const qp_mj_oper_req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool qp_mj_oper_req::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void qp_mj_oper_req::Swap(qp_mj_oper_req* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(v1_, other->v1_);
    std::swap(v2_, other->v2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata qp_mj_oper_req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = qp_mj_oper_req_descriptor_;
  metadata.reflection = qp_mj_oper_req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int qp_mj_oper_notify::kSeatNumerFieldNumber;
const int qp_mj_oper_notify::kTypeFieldNumber;
const int qp_mj_oper_notify::kV1FieldNumber;
const int qp_mj_oper_notify::kV2FieldNumber;
const int qp_mj_oper_notify::kNextOperSeatNumFieldNumber;
const int qp_mj_oper_notify::kNextOperFlagFieldNumber;
#endif  // !_MSC_VER

qp_mj_oper_notify::qp_mj_oper_notify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void qp_mj_oper_notify::InitAsDefaultInstance() {
}

qp_mj_oper_notify::qp_mj_oper_notify(const qp_mj_oper_notify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void qp_mj_oper_notify::SharedCtor() {
  _cached_size_ = 0;
  seat_numer_ = 0;
  type_ = 0u;
  v1_ = 0u;
  v2_ = 0u;
  next_oper_seat_num_ = 0;
  next_oper_flag_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

qp_mj_oper_notify::~qp_mj_oper_notify() {
  SharedDtor();
}

void qp_mj_oper_notify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void qp_mj_oper_notify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* qp_mj_oper_notify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return qp_mj_oper_notify_descriptor_;
}

const qp_mj_oper_notify& qp_mj_oper_notify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mj_2eproto();
  return *default_instance_;
}

qp_mj_oper_notify* qp_mj_oper_notify::default_instance_ = NULL;

qp_mj_oper_notify* qp_mj_oper_notify::New() const {
  return new qp_mj_oper_notify;
}

void qp_mj_oper_notify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    seat_numer_ = 0;
    type_ = 0u;
    v1_ = 0u;
    v2_ = 0u;
    next_oper_seat_num_ = 0;
    next_oper_flag_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool qp_mj_oper_notify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 seat_numer = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seat_numer_)));
          set_has_seat_numer();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // required uint32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_v1;
        break;
      }

      // optional uint32 v1 = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_v1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &v1_)));
          set_has_v1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_v2;
        break;
      }

      // optional uint32 v2 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_v2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &v2_)));
          set_has_v2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_next_oper_seat_num;
        break;
      }

      // optional int32 next_oper_seat_num = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_next_oper_seat_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &next_oper_seat_num_)));
          set_has_next_oper_seat_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_next_oper_flag;
        break;
      }

      // optional uint32 next_oper_flag = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_next_oper_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &next_oper_flag_)));
          set_has_next_oper_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void qp_mj_oper_notify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 seat_numer = 1;
  if (has_seat_numer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->seat_numer(), output);
  }

  // required uint32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // optional uint32 v1 = 3;
  if (has_v1()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->v1(), output);
  }

  // optional uint32 v2 = 4;
  if (has_v2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->v2(), output);
  }

  // optional int32 next_oper_seat_num = 5;
  if (has_next_oper_seat_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->next_oper_seat_num(), output);
  }

  // optional uint32 next_oper_flag = 6;
  if (has_next_oper_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->next_oper_flag(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* qp_mj_oper_notify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 seat_numer = 1;
  if (has_seat_numer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->seat_numer(), target);
  }

  // required uint32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // optional uint32 v1 = 3;
  if (has_v1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->v1(), target);
  }

  // optional uint32 v2 = 4;
  if (has_v2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->v2(), target);
  }

  // optional int32 next_oper_seat_num = 5;
  if (has_next_oper_seat_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->next_oper_seat_num(), target);
  }

  // optional uint32 next_oper_flag = 6;
  if (has_next_oper_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->next_oper_flag(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int qp_mj_oper_notify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 seat_numer = 1;
    if (has_seat_numer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->seat_numer());
    }

    // required uint32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional uint32 v1 = 3;
    if (has_v1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->v1());
    }

    // optional uint32 v2 = 4;
    if (has_v2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->v2());
    }

    // optional int32 next_oper_seat_num = 5;
    if (has_next_oper_seat_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->next_oper_seat_num());
    }

    // optional uint32 next_oper_flag = 6;
    if (has_next_oper_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->next_oper_flag());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void qp_mj_oper_notify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const qp_mj_oper_notify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const qp_mj_oper_notify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void qp_mj_oper_notify::MergeFrom(const qp_mj_oper_notify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seat_numer()) {
      set_seat_numer(from.seat_numer());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_v1()) {
      set_v1(from.v1());
    }
    if (from.has_v2()) {
      set_v2(from.v2());
    }
    if (from.has_next_oper_seat_num()) {
      set_next_oper_seat_num(from.next_oper_seat_num());
    }
    if (from.has_next_oper_flag()) {
      set_next_oper_flag(from.next_oper_flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void qp_mj_oper_notify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void qp_mj_oper_notify::CopyFrom(const qp_mj_oper_notify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool qp_mj_oper_notify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void qp_mj_oper_notify::Swap(qp_mj_oper_notify* other) {
  if (other != this) {
    std::swap(seat_numer_, other->seat_numer_);
    std::swap(type_, other->type_);
    std::swap(v1_, other->v1_);
    std::swap(v2_, other->v2_);
    std::swap(next_oper_seat_num_, other->next_oper_seat_num_);
    std::swap(next_oper_flag_, other->next_oper_flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata qp_mj_oper_notify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = qp_mj_oper_notify_descriptor_;
  metadata.reflection = qp_mj_oper_notify_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace qp_mj

// @@protoc_insertion_point(global_scope)
